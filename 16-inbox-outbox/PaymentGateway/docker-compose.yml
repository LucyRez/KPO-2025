services:
  payment-service-db:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: payment-service-db-pass
      POSTGRES_DB: payment-service-db
      POSTGRES_USER: payment-service-db
  payment-service:
    build:
      context: .
      dockerfile: PaymentService.Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - payment-service-db
      - kafka
    environment:
      CONNECTIONSTRINGS__Default: Host=payment-service-db;Database=payment-service-db;Username=payment-service-db;Password=payment-service-db-pass
      KAFKA__TOPIC: transaction-changes
      KAFKA__BOOTSTRAPSERVERS: kafka:9093
      ASPNETCORE_ENVIRONMENT: Development
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "29092"
      - "9093"
    environment:
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT, LOCALHOST:PLAINTEXT, SERVICE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_ADVERTISED_LISTENERS: CLIENT://kafka:29092, LOCALHOST://localhost:9092, SERVICE://kafka:9093
      KAFKA_LISTENERS: CLIENT://kafka:29092,LOCALHOST://0.0.0.0:9092,SERVICE://0.0.0.0:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka-init:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    entrypoint: ["sh", "-c"]
    command: |
      "
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic transaction-changes --partitions 1 --replication-factor 1
      "
  notification-service-db:
    image: postgres:13
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: notification-service-db-pass
      POSTGRES_DB: notification-service-db
      POSTGRES_USER: notification-service-db
  notification-service:
    build:
      context: .
      dockerfile: NotificationService.Dockerfile
    depends_on:
      - notification-service-db
      - kafka
    environment:
      CONNECTIONSTRINGS__Default: Host=notification-service-db;Database=notification-service-db;Username=notification-service-db;Password=notification-service-db-pass
      KAFKA__TOPIC: transaction-changes
      KAFKA__BOOTSTRAPSERVERS: kafka:9093
      KAFKA__GROUPID: notification-service-group
      ASPNETCORE_ENVIRONMENT: Development