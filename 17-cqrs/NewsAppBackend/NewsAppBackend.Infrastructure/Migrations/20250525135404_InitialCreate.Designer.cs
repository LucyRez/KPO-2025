// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewsAppBackend.Infrastructure.Database;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NewsAppBackend.Infrastructure.Migrations
{
    [DbContext(typeof(ReadWriteDbContext))]
    [Migration("20250525135404_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NewsAppBackend.Infrastructure.Database.Entities.DraftEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<Guid?>("feed_item_id")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("feed_item_id")
                        .IsUnique();

                    b.ToTable("drafts", (string)null);
                });

            modelBuilder.Entity("NewsAppBackend.Infrastructure.Database.Entities.FeedItemEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("feed_items", (string)null);
                });

            modelBuilder.Entity("NewsAppBackend.Infrastructure.Database.Entities.DraftEntity", b =>
                {
                    b.HasOne("NewsAppBackend.Infrastructure.Database.Entities.FeedItemEntity", "FeedItem")
                        .WithOne()
                        .HasForeignKey("NewsAppBackend.Infrastructure.Database.Entities.DraftEntity", "feed_item_id");

                    b.Navigation("FeedItem");
                });
#pragma warning restore 612, 618
        }
    }
}
