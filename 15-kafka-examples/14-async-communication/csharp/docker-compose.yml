version: '3'
services:
  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: car-shop-db-pass
      POSTGRES_DB: car-shop-db
      POSTGRES_USER: car-shop-db
  universal-car-shop:
    build:
      context: .
      dockerfile: MainApp.Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - kafka
    environment:
      CONNECTIONSTRINGS__PostgreSQL: Host=postgres;Database=car-shop-db;Username=car-shop-db;Password=car-shop-db-pass
      REPORTSERVER__TOPIC: car-shop-reported-events
      REPORTSERVER__BOOTSTRAPSERVERS: kafka:9093
      ASPNETCORE_ENVIRONMENT: Development
  report-service:
    build:
      context: .
      dockerfile: ReportService.Dockerfile
    ports:
      - "8081:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      REPORTEDEVENTSCONSUMER__TOPIC: car-shop-reported-events
      REPORTEDEVENTSCONSUMER__BOOTSTRAPSERVERS: kafka:9093
    depends_on:
      - kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "29092"
      - "9093"
    environment:
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT, LOCALHOST:PLAINTEXT, SERVICE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_ADVERTISED_LISTENERS: CLIENT://kafka:29092, LOCALHOST://localhost:9092, SERVICE://kafka:9093
      KAFKA_LISTENERS: CLIENT://kafka:29092,LOCALHOST://0.0.0.0:9092,SERVICE://0.0.0.0:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka-init:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    entrypoint: ["sh", "-c"]
    command: |
      "
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic car-shop-reported-events --partitions 1 --replication-factor 1
      "